name: Playwright Tests
on:
    push:
        branches: [main, master, feature/**]
    pull_request:
        branches: [main, master, feature/**]
    workflow_dispatch:

permissions:
    contents: read
    pages: write
    id-token: write

jobs:
    test:
        timeout-minutes: 60
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Cache Docker layers
              uses: actions/cache@v3
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-

            - name: Build and run tests
              uses: docker/build-push-action@v5
              with:
                  context: .
                  load: true
                  tags: playwright-tests:latest
                  cache-from: type=local,src=/tmp/.buildx-cache
                  cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

            - name: Move cache
              run: |
                  rm -rf /tmp/.buildx-cache
                  mv /tmp/.buildx-cache-new /tmp/.buildx-cache

            - name: Run tests
              id: test-run
              run: |
                  docker run --rm -v $(pwd)/allure-results:/app/allure-results playwright-tests:latest

            - name: Upload test results
              if: always()
              uses: actions/upload-artifact@v4.6.2
              with:
                  name: allure-results
                  path: allure-results

    report:
        needs: test
        if: always()
        runs-on: ubuntu-latest
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        steps:
            - uses: actions/checkout@v4

            - name: Download test results
              uses: actions/download-artifact@v4
              with:
                  name: allure-results
                  path: allure-results

            - name: Clean previous report
              run: |
                  rm -rf allure-report || true
                  rm -rf ./docs || true

            - name: Generate Allure report
              run: npx allure generate allure-results -o allure-report

            - name: Deploy to GitHub Pages
              id: deployment
              uses: peaceiris/actions-gh-pages@v3
              with:
                  personal_token: ${{ secrets.MY_TOKEN }}
                  publish_dir: ./allure-report
                  destination_dir: .
                  force_orphan: true
                  commit_message: 'Deploy Allure report [skip ci]'
